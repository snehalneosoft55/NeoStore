{"ast":null,"code":"import * as actionTypes from \"../lib/constants/actionTypes\";\nimport { BASE_URL } from '../constants/BaseURL';\nimport axios from 'axios';\n\nconst getProductByColorIdSuccess = data => ({\n  type: actionTypes.GET_PRODUCT_BY_COLOR_ID,\n  payload: data\n});\n\nexport function getProductByColorId(val) {\n  return function (dispatch) {\n    return axios.get(BASE_URL + \"commonProducts\", {\n      params: {\n        color_id: val\n      }\n    }).then(({\n      data\n    }) => {\n      console.log(\"data colors\", data);\n      const products = data.product_details;\n      console.log(\"products\", products);\n      dispatch(getProductByColorIdSuccess(products));\n    });\n  };\n}","map":{"version":3,"sources":["/home/neosoft/NeoStore/src/actions/getproductByColorIdAction.js"],"names":["actionTypes","BASE_URL","axios","getProductByColorIdSuccess","data","type","GET_PRODUCT_BY_COLOR_ID","payload","getProductByColorId","val","dispatch","get","params","color_id","then","console","log","products","product_details"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,8BAA7B;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,0BAA0B,GAAGC,IAAI,KAEnC;AACAC,EAAAA,IAAI,EAAEL,WAAW,CAACM,uBADlB;AAEAC,EAAAA,OAAO,EAAEH;AAFT,CAFmC,CAAvC;;AAOE,OAAO,SAASI,mBAAT,CAA6BC,GAA7B,EACP;AACE,SAAO,UAASC,QAAT,EAAmB;AACtB,WAAOR,KAAK,CAACS,GAAN,CAAUV,QAAQ,GAAG,gBAArB,EAAuC;AAACW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEJ;AAAZ;AAAT,KAAvC,EACFK,IADE,CACG,CAAC;AAAEV,MAAAA;AAAF,KAAD,KACN;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BZ,IAA1B;AACA,YAAMa,QAAQ,GAAGb,IAAI,CAACc,eAAtB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,QAAvB;AACAP,MAAAA,QAAQ,CAACP,0BAA0B,CAACc,QAAD,CAA3B,CAAR;AACH,KAPE,CAAP;AAQH,GATD;AAUD","sourcesContent":["import * as actionTypes from \"../lib/constants/actionTypes\";\nimport {BASE_URL} from '../constants/BaseURL'\n\nimport axios from 'axios';\n\nconst getProductByColorIdSuccess = data => (\n  \n    {\n    type: actionTypes.GET_PRODUCT_BY_COLOR_ID,\n    payload: data\n  });\n\n  export function getProductByColorId(val) \n  {\n    return function(dispatch) {\n        return axios.get(BASE_URL + \"commonProducts\", {params: { color_id: val }})\n            .then(({ data }) =>\n            {\n                console.log(\"data colors\",data);\n                const products = data.product_details;\n                console.log(\"products\",products);\n                dispatch(getProductByColorIdSuccess(products));\n            });\n    };\n  }\n  "]},"metadata":{},"sourceType":"module"}