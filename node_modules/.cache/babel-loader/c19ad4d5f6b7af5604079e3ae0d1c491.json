{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/NeoStore/src/components/ListOfColors.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../assets/css/ListOfColor.css\";\nimport { getColors } from \"../actions/ListOfColorsAction\";\nimport Button from \"@material-ui/core/Button\";\nimport { Tooltip } from \"@material-ui/core\";\nexport class ListOfColors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      colors: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.props.getColors().then(() => {\n      const {\n        colors\n      } = this.props; ////console.log(\"colors--\",this.props.colors);\n    });\n  } // colorHandler(colorId){\n  //     ////console.log(\"in colorHandler and get color id==\",colorId);\n  // }\n\n\n  render() {\n    const {\n      colors\n    } = this.props; ////console.log(\"colors\",colors);\n\n    const allColors = colors.color_details;\n    let colorDiv = \"\";\n\n    if (allColors != undefined) {\n      colorDiv = React.createElement(\"div\", {\n        class: \"d-flex flex-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, allColors.map((val, i) => {\n        let divColor = val.color_code;\n        const divStyle = {\n          background: divColor,\n          width: \"40px\",\n          height: \"20px\",\n          margin: \"1px 6px\",\n          border: \"1px solid black\",\n          borderRadis: \"40%\"\n        }; ////console.log(\"divcolor\",divColor);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: val.color_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          style: divStyle,\n          onClick: () => this.props.colorHandler(val.color_id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        })));\n      }));\n    } else {\n      colorDiv = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, colorDiv);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  ////console.log(\"state.colors\",state.colors);\n  //     return({\n  //     colors: state.colors\n  //   });\n  const {\n    colors\n  } = state.getColorsReducer;\n  return {\n    colors\n  };\n};\n\nconst mapDispatchToProps = {\n  getColors\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfColors);","map":{"version":3,"sources":["/home/neosoft/NeoStore/src/components/ListOfColors.js"],"names":["React","Component","connect","getColors","Button","Tooltip","ListOfColors","constructor","props","state","id","colors","componentWillMount","then","render","allColors","color_details","colorDiv","undefined","map","val","i","divColor","color_code","divStyle","background","width","height","margin","border","borderRadis","color_name","colorHandler","color_id","mapStateToProps","getColorsReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,+BAAP;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAC1CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,CADO;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AACDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKJ,KAAL,CAAWL,SAAX,GAAuBU,IAAvB,CAA4B,MAAM;AAChC,YAAM;AAAEF,QAAAA;AAAF,UAAa,KAAKH,KAAxB,CADgC,CAEhC;AACD,KAHD;AAID,GAbyC,CAc1C;AACA;AACA;;;AACAM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAa,KAAKH,KAAxB,CADO,CAEP;;AACA,UAAMO,SAAS,GAAGJ,MAAM,CAACK,aAAzB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIF,SAAS,IAAIG,SAAjB,EAA4B;AAC1BD,MAAAA,QAAQ,GACN;AAAK,QAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,SAAS,CAACI,GAAV,CAAc,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzB,YAAIC,QAAQ,GAAGF,GAAG,CAACG,UAAnB;AACA,cAAMC,QAAQ,GAAG;AACfC,UAAAA,UAAU,EAAEH,QADG;AAEfI,UAAAA,KAAK,EAAE,MAFQ;AAGfC,UAAAA,MAAM,EAAE,MAHO;AAIfC,UAAAA,MAAM,EAAE,SAJO;AAKfC,UAAAA,MAAM,EAAE,iBALO;AAMfC,UAAAA,WAAW,EAAE;AANE,SAAjB,CAFyB,CAUzB;;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAEV,GAAG,CAACW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,KAAK,EAAEP,QADT;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKhB,KAAL,CAAWwB,YAAX,CAAwBZ,GAAG,CAACa,QAA5B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF;AAUD,OArBA,CADH,CADF;AA0BD,KA3BD,MA2BO;AACLhB,MAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,QAAN,CAAP;AACD;;AAtDyC;;AAwD5C,MAAMiB,eAAe,GAAIzB,KAAD,IAAW;AACjC;AAEA;AACA;AACA;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAaF,KAAK,CAAC0B,gBAAzB;AACA,SAAO;AAAExB,IAAAA;AAAF,GAAP;AACD,CARD;;AAUA,MAAMyB,kBAAkB,GAAG;AACzBjC,EAAAA;AADyB,CAA3B;AAGA,eAAeD,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C9B,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"../assets/css/ListOfColor.css\";\nimport { getColors } from \"../actions/ListOfColorsAction\";\nimport Button from \"@material-ui/core/Button\";\nimport { Tooltip } from \"@material-ui/core\";\n\nexport class ListOfColors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      colors: \"\",\n    };\n  }\n  componentWillMount() {\n    this.props.getColors().then(() => {\n      const { colors } = this.props;\n      ////console.log(\"colors--\",this.props.colors);\n    });\n  }\n  // colorHandler(colorId){\n  //     ////console.log(\"in colorHandler and get color id==\",colorId);\n  // }\n  render() {\n    const { colors } = this.props;\n    ////console.log(\"colors\",colors);\n    const allColors = colors.color_details;\n    let colorDiv = \"\";\n    if (allColors != undefined) {\n      colorDiv = (\n        <div class=\"d-flex flex-wrap\">\n          {allColors.map((val, i) => {\n            let divColor = val.color_code;\n            const divStyle = {\n              background: divColor,\n              width: \"40px\",\n              height: \"20px\",\n              margin: \"1px 6px\",\n              border: \"1px solid black\",\n              borderRadis: \"40%\",\n            };\n            ////console.log(\"divcolor\",divColor);\n            return (\n              <div>\n                <Tooltip title={val.color_name}>\n                  <button\n                    style={divStyle}\n                    onClick={() => this.props.colorHandler(val.color_id)}\n                  ></button>\n                </Tooltip>\n              </div>\n            );\n          })}\n        </div>\n      );\n    } else {\n      colorDiv = null;\n    }\n\n    return <div>{colorDiv}</div>;\n  }\n}\nconst mapStateToProps = (state) => {\n  ////console.log(\"state.colors\",state.colors);\n\n  //     return({\n  //     colors: state.colors\n  //   });\n  const { colors } = state.getColorsReducer;\n  return { colors };\n};\n\nconst mapDispatchToProps = {\n  getColors,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfColors);\n"]},"metadata":{},"sourceType":"module"}