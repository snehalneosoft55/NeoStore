{"ast":null,"code":"import * as actionTypes from \"../lib/constants/actionTypes\"; // import {BASE_URL} from '../constants/BaseURL'\n// import axios from 'axios'\n\nimport swal from \"sweetalert\";\n\nconst getcartdataSuccess = data => ({\n  type: actionTypes.GET_CART_DATA,\n  payload: data\n});\n\nexport function getcartdata(productDetails) {\n  return function (dispatch) {\n    const myArray = localStorage.getItem(\"cartProducts\");\n    console.log(\"myArray: \", JSON.parse(myArray));\n    let productsInLocalStorage,\n        flag = false;\n\n    if (myArray !== null) {\n      productsInLocalStorage = JSON.parse(myArray);\n      console.log(\"productsInLocalStorage\", productsInLocalStorage);\n      productsInLocalStorage.map((val, i) => {\n        let x = val; // console.log(\"x==\",x.productDetail.id)\n\n        if (i === 0) {\n          console.log(\"x\");\n          console.log(\"x==\", x[0].productDetail.id);\n          let z = x[0].productDetail.id;\n          console.log(\"productDetails\", productDetails);\n          if (z === productDetails[i].productDetail.id) flag = true;\n        } else {\n          console.log(\"x in else==\", x[0].productDetail.id);\n          let a = x[0].productDetail.id;\n          console.log(\"in else productDetails\", productDetails[0].productDetail.id);\n\n          if (a === productDetails[0].productDetail.id) {\n            flag = true;\n          }\n        } // if(x === productDetails.productDetail.id){\n        //         flag = true;\n        // }\n\n      });\n\n      if (flag === false) {\n        productsInLocalStorage.push(productDetails);\n        swal(\"Added to cart\");\n        console.log(\"productsInLocalStorage\", productsInLocalStorage.length); // openSnackbar('Added to cart')\n        // console.log(\"Modified myArray productsInLocalStorage: \",productsInLocalStorage);\n      } else {\n        alert(\"Already in cart\");\n      }\n\n      localStorage.setItem(\"cartProducts\", JSON.stringify(productsInLocalStorage));\n    } else {\n      console.log(\"productDetails\", productDetails);\n      localStorage.setItem(\"cartProducts\", JSON.stringify(productDetails));\n    }\n\n    return dispatch(getcartdataSuccess(productsInLocalStorage));\n  };\n}\n;","map":{"version":3,"sources":["/home/neosoft/NeoStore/src/actions/cartDataAction.js"],"names":["actionTypes","swal","getcartdataSuccess","data","type","GET_CART_DATA","payload","getcartdata","productDetails","dispatch","myArray","localStorage","getItem","console","log","JSON","parse","productsInLocalStorage","flag","map","val","i","x","productDetail","id","z","a","push","length","alert","setItem","stringify"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../lib/constants/actionTypes\";\n// import {BASE_URL} from '../constants/BaseURL'\n\n// import axios from 'axios'\nimport swal from \"sweetalert\";\n\nconst getcartdataSuccess = data => (\n  \n  {\n  type: actionTypes.GET_CART_DATA,\n  payload: data\n});\n\nexport function getcartdata(productDetails) {\n  return function(dispatch) {\n    const myArray = localStorage.getItem(\"cartProducts\");\n    console.log(\"myArray: \",JSON.parse(myArray));\n    let productsInLocalStorage,\n      flag = false;\n\n    if (myArray !== null) {\n      productsInLocalStorage = JSON.parse(myArray);\n      console.log(\"productsInLocalStorage\", productsInLocalStorage);\n\n      productsInLocalStorage.map((val, i) => {\n        let x = val;\n        // console.log(\"x==\",x.productDetail.id)\n\n        if (i === 0) {\n          console.log(\"x\");\n          console.log(\"x==\", x[0].productDetail.id);\n          let z = x[0].productDetail.id;\n          console.log(\"productDetails\", productDetails);\n          if (z === productDetails[i].productDetail.id) flag = true;\n        } else {\n          console.log(\"x in else==\", x[0].productDetail.id);\n          let a = x[0].productDetail.id;\n          console.log(\n            \"in else productDetails\",\n            productDetails[0].productDetail.id\n          );\n          if (a === productDetails[0].productDetail.id) {\n            flag = true;\n          }\n        }\n        // if(x === productDetails.productDetail.id){\n        //         flag = true;\n\n        // }\n      });\n\n      if (flag === false) {\n        productsInLocalStorage.push(productDetails);\n        swal(\"Added to cart\");\n        console.log(\"productsInLocalStorage\", productsInLocalStorage.length);\n        // openSnackbar('Added to cart')\n        // console.log(\"Modified myArray productsInLocalStorage: \",productsInLocalStorage);\n      } else {\n        alert(\"Already in cart\");\n      }\n      localStorage.setItem(\n        \"cartProducts\",\n        JSON.stringify(productsInLocalStorage)\n      );\n    } else {\n      console.log(\"productDetails\", productDetails);\n       localStorage.setItem(\n        \"cartProducts\",\n        JSON.stringify(productDetails)\n      );\n    }\n    return dispatch(getcartdataSuccess(productsInLocalStorage));\n    };\n  };\n\n"]},"metadata":{},"sourceType":"module"}