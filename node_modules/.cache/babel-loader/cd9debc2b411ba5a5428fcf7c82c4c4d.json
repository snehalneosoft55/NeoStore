{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/NeoStore/src/components/ListOfColors.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../assets/css/ListOfColor.css';\nimport { getColors } from '../actions/ListOfColorsAction';\nexport class ListOfColors extends Component {\n  constructor() {\n    super();\n    this.state = {\n      colors: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.props.getColors().then(() => {\n      const {\n        colors\n      } = this.props;\n      console.log(\"colors--\", this.props.colors);\n    });\n  }\n\n  render() {\n    const {\n      colors\n    } = this.props;\n    console.log(\"colors\", colors);\n    const allColors = colors.color_details;\n    let colorDiv = \"\";\n\n    if (allColors != undefined) {\n      colorDiv = React.createElement(\"div\", {\n        class: \"d-flex flex-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, allColors.map((val, i) => {\n        divColor = val.i.color_code;\n        return React.createElement(\"div\", {\n          style: {\n            background: {\n              divColor\n            },\n            display: \"flex\",\n            width: \"40px\",\n            height: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"hello\");\n      }));\n    } else {\n      colorDiv = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, colorDiv);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state.colors\", state.colors); //     return({\n  //     colors: state.colors\n  //   });\n\n  const {\n    colors\n  } = state.getColorsReducer;\n  return {\n    colors\n  };\n};\n\nconst mapDispatchToProps = {\n  getColors\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfColors);","map":{"version":3,"sources":["/home/neosoft/NeoStore/src/components/ListOfColors.js"],"names":["React","Component","connect","getColors","ListOfColors","constructor","state","colors","componentWillMount","props","then","console","log","render","allColors","color_details","colorDiv","undefined","map","val","i","divColor","color_code","background","display","width","height","mapStateToProps","getColorsReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,+BAAP;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AAEA,OAAO,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACxCI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAC;AADA,KAAX;AAGH;;AACDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,KAAL,CAAWN,SAAX,GAAuBO,IAAvB,CAA4B,MAC5B;AACI,YAAM;AAAEH,QAAAA;AAAF,UAAa,KAAKE,KAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,KAAKH,KAAL,CAAWF,MAAlC;AACL,KAJC;AAMH;;AACDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEN,MAAAA;AAAF,QAAa,KAAKE,KAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBL,MAArB;AACA,UAAMO,SAAS,GAAEP,MAAM,CAACQ,aAAxB;AACA,QAAIC,QAAQ,GAAC,EAAb;;AACA,QAAGF,SAAS,IAAGG,SAAf,EAAyB;AAErBD,MAAAA,QAAQ,GACJ;AAAK,QAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIF,SAAS,CAACI,GAAV,CAAc,CAACC,GAAD,EAAKC,CAAL,KAAS;AACnBC,QAAAA,QAAQ,GAACF,GAAG,CAACC,CAAJ,CAAME,UAAf;AACA,eACI;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAC;AAACF,cAAAA;AAAD,aAAZ;AAAuBG,YAAAA,OAAO,EAAC,MAA/B;AAAsCC,YAAAA,KAAK,EAAC,MAA5C;AAAmDC,YAAAA,MAAM,EAAC;AAA1D,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;AAIH,OAND,CADJ,CADJ;AAeH,KAjBD,MAkBI;AACAV,MAAAA,QAAQ,GAAC,IAAT;AACH;;AAGD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKA,QAFL,CADJ;AAMH;;AAjDuC;;AAmD5C,MAAMW,eAAe,GAAGrB,KAAK,IAC7B;AACIK,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BN,KAAK,CAACC,MAAjC,EADJ,CAGA;AACA;AACA;;AACA,QAAM;AAACA,IAAAA;AAAD,MAAYD,KAAK,CAACsB,gBAAxB;AACI,SAAO;AAACrB,IAAAA;AAAD,GAAP;AACH,CATD;;AAWE,MAAMsB,kBAAkB,GAAG;AACzB1B,EAAAA;AADyB,CAA3B;AAGF,eAAeD,OAAO,CAACyB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CzB,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux';\n\nimport '../assets/css/ListOfColor.css'\nimport {getColors} from '../actions/ListOfColorsAction'\n\nexport class ListOfColors extends Component {\n    constructor(){\n        super();\n        this.state={\n            colors:\"\"\n        }\n    }\n    componentWillMount(){\n        this.props.getColors().then(() => \n        {\n            const { colors } = this.props;\n            console.log(\"colors--\",this.props.colors);\n      })\n      \n    }\n    render() {\n        const { colors } = this.props;\n        console.log(\"colors\",colors);\n        const allColors= colors.color_details;\n        let colorDiv=\"\";\n        if(allColors!= undefined){\n\n            colorDiv=(\n                <div class=\"d-flex flex-wrap\">{\n                    allColors.map((val,i)=>{\n                        divColor=val.i.color_code\n                        return(\n                            <div style={{background:{divColor},display:\"flex\",width:\"40px\",height:\"20px\"}}>hello</div>\n    \n                        )\n                    }\n    \n                    )\n                }\n                \n                </div>\n            )\n        }\n        else{\n            colorDiv=null;\n        }\n        \n\n        return (\n            <div >\n\n                {colorDiv}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => \n{\n    console.log(\"state.colors\",state.colors);\n\n//     return({\n//     colors: state.colors\n//   });\nconst {colors } = state.getColorsReducer\n    return {colors};\n}\n\n  const mapDispatchToProps = {\n    getColors\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(ListOfColors);\n"]},"metadata":{},"sourceType":"module"}