{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/NeoStore/src/components/Registration.js\";\nimport React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { RegEx } from './RegEx';\nimport Inputs from './inputs';\nimport Footer from './footer';\nimport HomeNavBar from './navbar';\nimport '../assets/css/stylesheet.css';\nimport { connect } from 'react-redux';\nimport { postUserInfo } from '../actions/registrationAction';\nimport TextField from '@material-ui/core/TextField';\nlet valid = true;\nlet forbutton;\n\nconst validateForm = users => {\n  console.log(\"in validateForm\");\n  Object.values(users).forEach(val => {\n    if (val === '') {\n      valid = false;\n    } else {\n      valid = true;\n    }\n  });\n  return valid;\n}; //Registration page\n\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault(); // console.log(\"in handlechange\");\n\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n      let users = this.state.users; // console.log(users);     \n\n      switch (name) {\n        case 'FirstName':\n          if (value === '') {\n            errors.firstName = \"Required\";\n          } else if (!RegEx.FirstName.test(value)) {\n            // console.log(\"in alphabates validation\",value);\n            errors.firstName = 'Only alphabates are allowed';\n          } else {\n            errors.firstName = '';\n            users.firstName = value;\n          }\n\n          break;\n\n        case 'LastName':\n          if (value === '') {\n            errors.lastName = \"Required\";\n          } else if (!RegEx.LastName.test(value)) {\n            // console.log(\"in alphabates validation\",value);\n            errors.lastName = \"Only alphabates are allowed\";\n          } else {\n            errors.lastName = '';\n            users.lastName = value;\n          }\n\n          break;\n\n        case 'Email':\n          if (value === '') {\n            errors.email = \"Required\";\n          } else if (!RegEx.Email.test(value)) {\n            // console.log('no error in email');\n            errors.email = 'Enter valid email';\n          } else {\n            errors.email = '';\n            users.email = value;\n          }\n\n          break;\n\n        case 'Username':\n          // console.log(\"in username\");\n          if (value === '') {\n            errors.username = 'Required';\n          } else if (value.length < 3) {\n            errors.username = 'Username must be at least 3 charecters';\n          } else {\n            errors.username = '';\n            users.username = value;\n          }\n\n          break;\n\n        case 'Password':\n          if (value === '') {\n            errors.password = 'Required';\n          } else if (value.length < 7 || value.length > 15) {\n            errors.password = 'Password length must between 7 to 15';\n          } else {\n            errors.password = '';\n            users.password = value;\n          }\n\n          break;\n\n        case 'ConfirmPassword':\n          users.confirmPassword = value;\n\n          if (value === \"\") {\n            errors.confirmPassword = 'Required';\n          } else if (users.password !== users.confirmPassword) {\n            // console.log(\"in c pass true\", users.confirmPassword);\n            errors.confirmPassword = 'Password not matched';\n          } else {\n            //console.log(\"in false\",users.password,users.confirmPassword);\n            errors.confirmPassword = '';\n          }\n\n          break;\n\n        case 'mobileNo':\n          if (value === '') {\n            errors.mobileNo = 'Required';\n          } else if (value.length !== 10) {\n            // console.log(\"\");\n            errors.mobileNo = 'Mobile No should be of 10 Digit';\n          } else {\n            errors.mobileNo = '';\n            users.mobileNo = value;\n          }\n\n          break;\n        // errors.confirmPassword = this.\n\n        case 'gender':\n          // console.log(\"in radio vallidation\");\n          if (value.length === 0) {\n            // console.log(\"gender not selected\");\n            errors.gender = \"select gender\";\n          } else {\n            errors.gender = \"\";\n            users.gender = value;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        users\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (validateForm(this.state.users)) {\n        forbutton = true;\n        this.setState({\n          submitError: ''\n        });\n        console.log(\"valid form\", \"forbutton:\", forbutton, this.state.users, JSON.stringify(this.state.users));\n        const userData1 = {\n          first_name: this.state.users.firstName,\n          last_name: this.state.users.lastName,\n          email: this.state.users.email,\n          pass: this.state.users.password,\n          confirmPass: this.state.users.confirmPassword,\n          phone_no: this.state.users.mobileNo,\n          gender: this.state.users.gender\n        };\n        console.log('in on submit----gender::', userData1.gender, this.state.users.gender);\n        console.log(\"------------userData,in onsubmit\", userData1);\n        this.props.postUserInfo(userData1);\n      } else {\n        forbutton = false;\n        this.setState({\n          submitError: \"Enter values\"\n        }); // console.log(\"Invalid form\",\"forbutton:\",forbutton);\n        // alert(\"enter all fields\");\n      }\n    };\n\n    this.state = {\n      users: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        mobileNo: '',\n        gender: ''\n      },\n      errors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        mobileNo: \"\",\n        gender: \"\"\n      },\n      submitError: ''\n    };\n  }\n\n  componentWillMount() {\n    console.log('in willmount');\n    console.log('in willmount----gender::', this.state.users.gender); // console.log(\"------------userData,in will mount\",userData);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state; // const {password}=this.state;\n    // const {formInputs}=this.state;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(HomeNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"Signup-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"signupInfo_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"signUpInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      action: \"./signIn.js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"registrationLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Register To NeoStore\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"outlined-basic\",\n      name: \"FirstName\",\n      label: \"Outlined\",\n      variant: \"outlined\",\n      placeholder: \"First Name\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(Inputs, {\n      name: \"FirstName\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, errors.firstName), React.createElement(Inputs, {\n      name: \"LastName\",\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, errors.lastName), React.createElement(Inputs, {\n      name: \"Email\",\n      type: \"Email\",\n      placeholder: \"Email\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, errors.email), React.createElement(Inputs, {\n      name: \"Username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, errors.username), React.createElement(Inputs, {\n      name: \"Password\",\n      type: \"password\",\n      maxlength: \"10\",\n      placeholder: \"Password\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, errors.password), React.createElement(Inputs, {\n      name: \"ConfirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, errors.confirmPassword), React.createElement(Inputs, {\n      name: \"mobileNo\",\n      type: \"number\",\n      placeholder: \"Mobile No\",\n      value: this.state.value,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, errors.mobileNo), React.createElement(Form.Group, {\n      className: \"formGridCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"genderLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(Form.Check, {\n      inline: true,\n      type: \"radio\",\n      label: \"Female\",\n      name: \"gender\",\n      value: \"F\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      inline: true,\n      type: \"radio\",\n      label: \"Male\",\n      name: \"gender\",\n      value: \"M\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, errors.gender), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"span\", {\n      className: \"errorShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, this.state.submitError)), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"./signIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-info btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Sign In\")))))))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userData: state.userData\n});\n\nconst mapDispatchToProps = {\n  postUserInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","map":{"version":3,"sources":["/home/neosoft/NeoStore/src/components/Registration.js"],"names":["React","Container","Row","Col","Card","Link","Form","Button","RegEx","Inputs","Footer","HomeNavBar","connect","postUserInfo","TextField","valid","forbutton","validateForm","users","console","log","Object","values","forEach","val","Registration","Component","constructor","props","handleChange","event","preventDefault","name","value","target","errors","state","firstName","FirstName","test","lastName","LastName","email","Email","username","length","password","confirmPassword","mobileNo","gender","setState","handleSubmit","submitError","JSON","stringify","userData1","first_name","last_name","pass","confirmPass","phone_no","componentWillMount","render","mapStateToProps","userData","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA2BC,IAA3B,QAAsC,iBAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAcC,MAAd,QAA4B,iBAA5B;AAEA,SAAQC,KAAR,QAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAO,8BAAP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA4B,+BAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAIC,SAAJ;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqBK,OAArB,CACKC,GAAD,IAAS;AACL,QAAGA,GAAG,KAAG,EAAT,EAAY;AAACT,MAAAA,KAAK,GAAG,KAAR;AAAe,KAA5B,MACI;AAACA,MAAAA,KAAK,GAAC,IAAN;AAAY;AACpB,GAJL;AAOA,SAAOA,KAAP;AACH,CAXD,C,CAaA;;;AACC,MAAMU,YAAN,SAA2BzB,KAAK,CAAC0B,SAAjC,CAA0C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA2BlBC,YA3BkB,GA2BFC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN,GADsB,CAElB;;AAEJ,YAAM;AAACC,QAAAA,IAAD;AAAQC,QAAAA;AAAR,UAAiBH,KAAK,CAACI,MAA7B;AACA,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACA,UAAIjB,KAAK,GAAE,KAAKkB,KAAL,CAAWlB,KAAtB,CANsB,CAOtB;;AAEA,cAAOc,IAAP;AACI,aAAK,WAAL;AACI,cAAGC,KAAK,KAAG,EAAX,EAAc;AACVE,YAAAA,MAAM,CAACE,SAAP,GAAiB,UAAjB;AACH,WAFD,MAIK,IAAG,CAAG7B,KAAK,CAAC8B,SAAP,CAAkBC,IAAlB,CAAuBN,KAAvB,CAAL,EAAoC;AACjC;AACAE,YAAAA,MAAM,CAACE,SAAP,GAAiB,6BAAjB;AACH,WAHA,MAID;AACAF,YAAAA,MAAM,CAACE,SAAP,GAAiB,EAAjB;AACAnB,YAAAA,KAAK,CAACmB,SAAN,GAAgBJ,KAAhB;AACH;;AACD;;AACJ,aAAK,UAAL;AACS,cAAGA,KAAK,KAAG,EAAX,EAAc;AACfE,YAAAA,MAAM,CAACK,QAAP,GAAgB,UAAhB;AACH,WAFI,MAGA,IAAG,CAAGhC,KAAK,CAACiC,QAAP,CAAiBF,IAAjB,CAAsBN,KAAtB,CAAL,EAAmC;AAChC;AACAE,YAAAA,MAAM,CAACK,QAAP,GAAgB,6BAAhB;AACH,WAHA,MAID;AACAL,YAAAA,MAAM,CAACK,QAAP,GAAgB,EAAhB;AACAtB,YAAAA,KAAK,CAACsB,QAAN,GAAeP,KAAf;AACH;;AACD;;AACJ,aAAK,OAAL;AACI,cAAGA,KAAK,KAAG,EAAX,EAAc;AACVE,YAAAA,MAAM,CAACO,KAAP,GAAa,UAAb;AACH,WAFD,MAGK,IAAG,CAAGlC,KAAK,CAACmC,KAAP,CAAcJ,IAAd,CAAmBN,KAAnB,CAAL,EAAgC;AACjC;AACAE,YAAAA,MAAM,CAACO,KAAP,GAAe,mBAAf;AACH,WAHI,MAID;AACAP,YAAAA,MAAM,CAACO,KAAP,GAAc,EAAd;AACAxB,YAAAA,KAAK,CAACwB,KAAN,GAAYT,KAAZ;AACH;;AACF;;AACH,aAAK,UAAL;AACI;AACA,cAAGA,KAAK,KAAG,EAAX,EAAc;AACVE,YAAAA,MAAM,CAACS,QAAP,GAAgB,UAAhB;AACH,WAFD,MAGK,IAAGX,KAAK,CAACY,MAAN,GAAa,CAAhB,EAAkB;AACnBV,YAAAA,MAAM,CAACS,QAAP,GAAgB,wCAAhB;AAEH,WAHI,MAID;AACAT,YAAAA,MAAM,CAACS,QAAP,GAAgB,EAAhB;AACA1B,YAAAA,KAAK,CAAC0B,QAAN,GAAeX,KAAf;AACH;;AACD;;AACJ,aAAK,UAAL;AACI,cAAGA,KAAK,KAAG,EAAX,EAAc;AACVE,YAAAA,MAAM,CAACW,QAAP,GAAkB,UAAlB;AACH,WAFD,MAGK,IAAGb,KAAK,CAACY,MAAN,GAAa,CAAb,IAAkBZ,KAAK,CAACY,MAAN,GAAa,EAAlC,EAAqC;AACtCV,YAAAA,MAAM,CAACW,QAAP,GAAkB,sCAAlB;AAEH,WAHI,MAKD;AACAX,YAAAA,MAAM,CAACW,QAAP,GAAkB,EAAlB;AACA5B,YAAAA,KAAK,CAAC4B,QAAN,GAAeb,KAAf;AACH;;AACD;;AACJ,aAAK,iBAAL;AAEIf,UAAAA,KAAK,CAAC6B,eAAN,GAAsBd,KAAtB;;AACA,cAAGA,KAAK,KAAG,EAAX,EAAc;AACVE,YAAAA,MAAM,CAACY,eAAP,GAAuB,UAAvB;AACH,WAFD,MAGK,IAAG7B,KAAK,CAAC4B,QAAN,KAAoB5B,KAAK,CAAC6B,eAA7B,EAA6C;AAC/C;AACCZ,YAAAA,MAAM,CAACY,eAAP,GAAuB,sBAAvB;AACH,WAHI,MAID;AACA;AACAZ,YAAAA,MAAM,CAACY,eAAP,GAAuB,EAAvB;AACH;;AACD;;AACJ,aAAK,UAAL;AACI,cAAGd,KAAK,KAAG,EAAX,EAAc;AACVE,YAAAA,MAAM,CAACa,QAAP,GAAkB,UAAlB;AACH,WAFD,MAIC,IAAGf,KAAK,CAACY,MAAN,KAAiB,EAApB,EAAuB;AACpB;AACAV,YAAAA,MAAM,CAACa,QAAP,GAAkB,iCAAlB;AAEH,WAJA,MAMG;AACAb,YAAAA,MAAM,CAACa,QAAP,GAAkB,EAAlB;AACA9B,YAAAA,KAAK,CAAC8B,QAAN,GAAef,KAAf;AACH;;AACD;AACA;;AACA,aAAK,QAAL;AACI;AACA,cAAGA,KAAK,CAACY,MAAN,KAAe,CAAlB,EAAoB;AAChB;AACDV,YAAAA,MAAM,CAACc,MAAP,GAAc,eAAd;AAEF,WAJD,MAKI;AACAd,YAAAA,MAAM,CAACc,MAAP,GAAc,EAAd;AACA/B,YAAAA,KAAK,CAAC+B,MAAN,GAAahB,KAAb;AACH;;AACD;;AACR;AACI;AAlHR;;AAoHA,WAAKiB,QAAL,CAAc;AAACf,QAAAA,MAAD;AAAQjB,QAAAA;AAAR,OAAd;AAEH,KA1JiB;;AAAA,SA4JlBiC,YA5JkB,GA4JFrB,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;;AAEA,UAAGd,YAAY,CAAC,KAAKmB,KAAL,CAAWlB,KAAZ,CAAf,EAAkC;AAC9BF,QAAAA,SAAS,GAAC,IAAV;AACA,aAAKkC,QAAL,CAAc;AAACE,UAAAA,WAAW,EAAC;AAAb,SAAd;AACAjC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,YAAzB,EAAsCJ,SAAtC,EAAiD,KAAKoB,KAAL,CAAWlB,KAA5D,EAAkEmC,IAAI,CAACC,SAAL,CAAe,KAAKlB,KAAL,CAAWlB,KAA1B,CAAlE;AACA,cAAMqC,SAAS,GAAG;AACdC,UAAAA,UAAU,EAAC,KAAKpB,KAAL,CAAWlB,KAAX,CAAiBmB,SADd;AAEdoB,UAAAA,SAAS,EAAC,KAAKrB,KAAL,CAAWlB,KAAX,CAAiBsB,QAFb;AAGdE,UAAAA,KAAK,EAAC,KAAKN,KAAL,CAAWlB,KAAX,CAAiBwB,KAHT;AAIdgB,UAAAA,IAAI,EAAC,KAAKtB,KAAL,CAAWlB,KAAX,CAAiB4B,QAJR;AAKda,UAAAA,WAAW,EAAC,KAAKvB,KAAL,CAAWlB,KAAX,CAAiB6B,eALf;AAMda,UAAAA,QAAQ,EAAC,KAAKxB,KAAL,CAAWlB,KAAX,CAAiB8B,QANZ;AAOdC,UAAAA,MAAM,EAAC,KAAKb,KAAL,CAAWlB,KAAX,CAAiB+B;AAPV,SAAlB;AASA9B,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCmC,SAAS,CAACN,MAAjD,EAAwD,KAAKb,KAAL,CAAWlB,KAAX,CAAiB+B,MAAzE;AACA9B,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CmC,SAA/C;AACA,aAAK3B,KAAL,CAAWf,YAAX,CAAwB0C,SAAxB;AAEH,OAjBD,MAkBI;AACAvC,QAAAA,SAAS,GAAC,KAAV;AACA,aAAKkC,QAAL,CAAc;AAACE,UAAAA,WAAW,EAAC;AAAb,SAAd,EAFA,CAGA;AACA;AACH;AACJ,KAvLiB;;AAEd,SAAKhB,KAAL,GAAW;AACPlB,MAAAA,KAAK,EAAC;AACFmB,QAAAA,SAAS,EAAC,EADR;AAEFG,QAAAA,QAAQ,EAAC,EAFP;AAGFE,QAAAA,KAAK,EAAC,EAHJ;AAIFE,QAAAA,QAAQ,EAAC,EAJP;AAKFE,QAAAA,QAAQ,EAAC,EALP;AAMFC,QAAAA,eAAe,EAAC,EANd;AAOFC,QAAAA,QAAQ,EAAC,EAPP;AAQFC,QAAAA,MAAM,EAAC;AARL,OADC;AAWHd,MAAAA,MAAM,EAAC;AACHE,QAAAA,SAAS,EAAC,EADP;AAEHG,QAAAA,QAAQ,EAAC,EAFN;AAGHE,QAAAA,KAAK,EAAC,EAHH;AAIHE,QAAAA,QAAQ,EAAC,EAJN;AAKHE,QAAAA,QAAQ,EAAC,EALN;AAMHC,QAAAA,eAAe,EAAC,EANb;AAOHC,QAAAA,QAAQ,EAAC,EAPN;AAQHC,QAAAA,MAAM,EAAC;AARJ,OAXJ;AAqBHG,MAAAA,WAAW,EAAC;AArBT,KAAX;AAuBC;;AA+JLS,EAAAA,kBAAkB,GAAE;AAChB1C,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuC,KAAKgB,KAAL,CAAWlB,KAAX,CAAiB+B,MAAxD,EAFgB,CAGhB;AACH;;AAEDa,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAC3B,MAAAA;AAAD,QAAW,KAAKC,KAAtB,CADI,CAGJ;AACA;;AACA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAQA,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKe,YAArB;AAAmC,MAAA,MAAM,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHL,EAIA,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,gBADP;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,WAAW,EAAC,YALhB;AAMI,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWH,KANtB;AAOI,MAAA,YAAY,EAAE,KAAKJ,YAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAaA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,WAAW,EAAC,YAAjD;AAA8D,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWH,KAAhF;AAAuF,MAAA,YAAY,EAAE,KAAKJ,YAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,EAcA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BM,MAAM,CAACE,SAArC,CAdA,EAeA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,WAAW,EAAC,WAAhD;AAA4D,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWH,KAA9E;AAAqF,MAAA,YAAY,EAAE,KAAKJ,YAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfA,EAgBA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,MAAM,CAACK,QAApC,CAhBA,EAiBA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,OAA1B;AAAkC,MAAA,WAAW,EAAC,OAA9C;AAAsD,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWH,KAAxE;AAA+E,MAAA,YAAY,EAAE,KAAKJ,YAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBA,EAkBA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,MAAM,CAACO,KAApC,CAlBA,EAmBA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,WAAW,EAAC,UAAhD;AAA2D,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWH,KAA7E;AAAoF,MAAA,YAAY,EAAE,KAAKJ,YAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBA,EAoBA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,MAAM,CAACS,QAApC,CApBA,EAqBA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAC,UAA7B;AAAwC,MAAA,SAAS,EAAC,IAAlD;AAAuD,MAAA,WAAW,EAAC,UAAnE;AAA8E,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWH,KAAhG;AAAuG,MAAA,YAAY,EAAE,KAAKJ,YAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBA,EAsBA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,MAAM,CAACW,QAApC,CAtBA,EAuBA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,iBAAb;AAA+B,MAAA,IAAI,EAAC,UAApC;AAA+C,MAAA,WAAW,EAAC,kBAA3D;AAA8E,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWH,KAAhG;AAAuG,MAAA,YAAY,EAAE,KAAKJ,YAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBA,EAwBA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,MAAM,CAACY,eAApC,CAxBA,EAyBA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,WAAW,EAAC,WAAlD;AAA8D,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWH,KAAhF;AAAuF,MAAA,YAAY,EAAE,KAAKJ,YAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBA,EA0BA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,MAAM,CAACa,QAApC,CA1BA,EA8BA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGQ,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAC,QAAtC;AAA+C,MAAA,IAAI,EAAC,QAApD;AAA6D,MAAA,KAAK,EAAC,GAAnE;AAAuE,MAAA,QAAQ,EAAE,KAAKnB,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,EAIQ,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAC,MAAtC;AAA6C,MAAA,IAAI,EAAC,QAAlD;AAA2D,MAAA,KAAK,EAAC,GAAjE;AAAqE,MAAA,QAAQ,EAAE,KAAKA,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,CA9BA,EAoCA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,MAAM,CAACc,MAApC,CApCA,EAuCA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKb,KAAL,CAAWgB,WAAxC,CAFJ,CADJ,EAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAS,MAAA,IAAI,EAAC,QAAd;AAAuB,MAAA,SAAS,EAAC,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CALJ,CAvCA,CADA,CADJ,CADJ,CALJ,CARA,CAFJ,EA4EA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5EA,CADA;AAgFH;;AApRsC;;AAsR3C,MAAMW,eAAe,GAAG3B,KAAK,KAAK;AAC9B4B,EAAAA,QAAQ,EAAE5B,KAAK,CAAC4B;AADc,CAAL,CAA7B;;AAIE,MAAMC,kBAAkB,GAAG;AACzBpD,EAAAA;AADyB,CAA3B;AAGF,eAAeD,OAAO,CAClBmD,eADkB,EAElBE,kBAFkB,CAAP,CAGXxC,YAHW,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport {Container,Row,Col, Card} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form,Button } from 'react-bootstrap';\r\n\r\nimport {RegEx} from './RegEx';\r\nimport Inputs from './inputs';\r\nimport Footer from './footer';\r\nimport HomeNavBar from './navbar';\r\nimport '../assets/css/stylesheet.css'\r\n\r\n\r\nimport { connect } from 'react-redux'\r\nimport {postUserInfo}  from '../actions/registrationAction'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nlet valid = true;\r\nlet forbutton;\r\nconst validateForm = (users) => {\r\n    console.log(\"in validateForm\");\r\n    \r\n    Object.values(users).forEach(\r\n        (val) => {\r\n            if(val===''){valid = false;}\r\n            else{valid=true;}\r\n        }  \r\n    \r\n    );\r\n    return valid;\r\n}\r\n\r\n//Registration page\r\n class Registration extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            users:{ \r\n                firstName:'',\r\n                lastName:'',\r\n                email:'',\r\n                username:'',\r\n                password:'',\r\n                confirmPassword:'',\r\n                mobileNo:'',\r\n                gender:''\r\n            },\r\n                errors:{\r\n                    firstName:\"\",\r\n                    lastName:\"\",\r\n                    email:\"\",\r\n                    username:\"\",\r\n                    password:\"\",\r\n                    confirmPassword:\"\",\r\n                    mobileNo:\"\" ,\r\n                    gender:\"\"\r\n                },\r\n                submitError:''\r\n            }\r\n        }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n            // console.log(\"in handlechange\");\r\n        \r\n        const {name , value} = event.target;\r\n        let errors = this.state.errors;\r\n        let users =this.state.users;\r\n        // console.log(users);     \r\n\r\n        switch(name){\r\n            case 'FirstName':\r\n                if(value===''){\r\n                    errors.firstName=\"Required\";\r\n                }\r\n               \r\n                else if(!((RegEx.FirstName).test(value))){\r\n                        // console.log(\"in alphabates validation\",value);\r\n                        errors.firstName='Only alphabates are allowed';\r\n                    }\r\n                else{\r\n                    errors.firstName='';\r\n                    users.firstName=value;\r\n                }\r\n                break; \r\n            case 'LastName':\r\n                     if(value===''){\r\n                    errors.lastName=\"Required\";\r\n                }\r\n                else if(!((RegEx.LastName).test(value))){\r\n                        // console.log(\"in alphabates validation\",value);\r\n                        errors.lastName=\"Only alphabates are allowed\";\r\n                    }\r\n                else{\r\n                    errors.lastName='';\r\n                    users.lastName=value;\r\n                }\r\n                break;  \r\n            case 'Email':\r\n                if(value===''){\r\n                    errors.email=\"Required\";  \r\n                }\r\n                else if(!((RegEx.Email).test(value))){\r\n                    // console.log('no error in email');\r\n                    errors.email = 'Enter valid email' ;\r\n                }\r\n                else{\r\n                    errors.email ='';\r\n                    users.email=value;\r\n                }\r\n               break;\r\n            case 'Username' :\r\n                // console.log(\"in username\");\r\n                if(value===''){\r\n                    errors.username='Required';\r\n                }\r\n                else if(value.length<3){\r\n                    errors.username='Username must be at least 3 charecters';\r\n                    \r\n                }\r\n                else{\r\n                    errors.username='';\r\n                    users.username=value;\r\n                }\r\n                break;\r\n            case 'Password' :\r\n                if(value===''){\r\n                    errors.password = 'Required';  \r\n                }\r\n                else if(value.length<7 || value.length>15){\r\n                    errors.password = 'Password length must between 7 to 15';\r\n                    \r\n                }\r\n                \r\n                else{\r\n                    errors.password = '';\r\n                    users.password=value;\r\n                }\r\n                break;\r\n            case 'ConfirmPassword' :\r\n                \r\n                users.confirmPassword=value;\r\n                if(value===\"\"){\r\n                    errors.confirmPassword='Required';\r\n                }\r\n                else if(users.password  !== users.confirmPassword){\r\n                   // console.log(\"in c pass true\", users.confirmPassword);\r\n                    errors.confirmPassword='Password not matched';\r\n                }\r\n                else{\r\n                    //console.log(\"in false\",users.password,users.confirmPassword);\r\n                    errors.confirmPassword='';\r\n                }\r\n                break;\r\n            case 'mobileNo' :\r\n                if(value===''){\r\n                    errors.mobileNo = 'Required';\r\n                }\r\n              \r\n            else if(value.length !== 10){\r\n                    // console.log(\"\");\r\n                    errors.mobileNo = 'Mobile No should be of 10 Digit';\r\n                    \r\n                }\r\n               \r\n                else{\r\n                    errors.mobileNo = '';\r\n                    users.mobileNo=value;\r\n                }\r\n                break;\r\n                // errors.confirmPassword = this.\r\n                case 'gender':\r\n                    // console.log(\"in radio vallidation\");\r\n                    if(value.length===0){\r\n                        // console.log(\"gender not selected\");\r\n                       errors.gender=\"select gender\" ;\r\n\r\n                    }\r\n                    else{\r\n                        errors.gender=\"\";\r\n                        users.gender=value;\r\n                    }\r\n                    break;\r\n            default:\r\n                break;\r\n            }\r\n        this.setState({errors,users});\r\n        \r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(validateForm(this.state.users)){\r\n            forbutton=true;\r\n            this.setState({submitError:''});\r\n            console.log(\"valid form\",\"forbutton:\",forbutton, this.state.users,JSON.stringify(this.state.users));\r\n            const userData1 = {\r\n                first_name:this.state.users.firstName,\r\n                last_name:this.state.users.lastName,\r\n                email:this.state.users.email,\r\n                pass:this.state.users.password,\r\n                confirmPass:this.state.users.confirmPassword,\r\n                phone_no:this.state.users.mobileNo,\r\n                gender:this.state.users.gender\r\n            };\r\n            console.log('in on submit----gender::',userData1.gender,this.state.users.gender);\r\n            console.log(\"------------userData,in onsubmit\",userData1);\r\n            this.props.postUserInfo(userData1);\r\n          \r\n        }\r\n        else{\r\n            forbutton=false;\r\n            this.setState({submitError:\"Enter values\"});\r\n            // console.log(\"Invalid form\",\"forbutton:\",forbutton);\r\n            // alert(\"enter all fields\");\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        console.log('in willmount');\r\n        console.log('in willmount----gender::',this.state.users.gender);\r\n        // console.log(\"------------userData,in will mount\",userData);\r\n    };\r\n    \r\n    render(){\r\n        const {errors} = this.state;\r\n        \r\n        // const {password}=this.state;\r\n        // const {formInputs}=this.state;\r\n        return(\r\n        <div>\r\n            <HomeNavBar></HomeNavBar>\r\n            <Container fluid={true} >\r\n            \r\n            {/* <Row className=\"SocialButton\">\r\n                <Button className=\"facebook\"><span><i src=\"fa fa-facebook\"></i></span>Login With Facebook</Button>\r\n                <Button className=\"google\"><span><i src=\"fa fa-google\"></i></span>Login With Google</Button>\r\n\r\n            </Row> */}\r\n            <hr className=\"line\"></hr>\r\n            <Row className=\"Signup-wrapper\">\r\n                {/* <Col xs={7}>\r\n                    <Image className=\"sideImage\" src={Assets.SIDE_IMAGE} alt=\"SIDE_IMAGE\"/>\r\n                </Col>\r\n                <Col xs={5}> */}\r\n                <Card className=\"signupInfo_card\">\r\n                    <Row className=\"signUpInfo\">\r\n                        <form onSubmit={this.handleSubmit} action=\"./signIn.js\">\r\n                        <Form.Group>\r\n                    {/* <Form> */}\r\n                        <h1 className=\"registrationLabel\">Register To NeoStore</h1>\r\n                        <br/><br/>\r\n                        <TextField \r\n                            id=\"outlined-basic\" \r\n                            name=\"FirstName\" \r\n                            label=\"Outlined\" \r\n                            variant=\"outlined\" \r\n                            placeholder=\"First Name\"\r\n                            value={this.state.value}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n                        <Inputs name=\"FirstName\" type=\"text\" placeholder=\"First Name\" value={this.state.value} handleChange={this.handleChange}/>\r\n                        <span className=\"errorShow\" >{errors.firstName}</span>\r\n                        <Inputs name=\"LastName\" type=\"text\" placeholder=\"Last Name\" value={this.state.value} handleChange={this.handleChange}/>\r\n                        <span className=\"errorShow\">{errors.lastName}</span>\r\n                        <Inputs name=\"Email\" type=\"Email\" placeholder=\"Email\" value={this.state.value} handleChange={this.handleChange}/>\r\n                        <span className=\"errorShow\">{errors.email}</span>\r\n                        <Inputs name=\"Username\" type=\"text\" placeholder=\"Username\" value={this.state.value} handleChange={this.handleChange}/>\r\n                        <span className=\"errorShow\">{errors.username}</span>\r\n                        <Inputs name=\"Password\" type=\"password\" maxlength=\"10\" placeholder=\"Password\" value={this.state.value} handleChange={this.handleChange} />\r\n                        <span className=\"errorShow\">{errors.password}</span>\r\n                        <Inputs name=\"ConfirmPassword\" type=\"password\" placeholder=\"Confirm Password\" value={this.state.value} handleChange={this.handleChange}/>\r\n                        <span className=\"errorShow\">{errors.confirmPassword}</span>\r\n                        <Inputs name=\"mobileNo\" type=\"number\" placeholder=\"Mobile No\" value={this.state.value} handleChange={this.handleChange}/> \r\n                        <span className=\"errorShow\">{errors.mobileNo}</span>\r\n                        {/* <Form.check type=\"radio\">Male</Form.check> */}\r\n                        \r\n                        \r\n                        <Form.Group className=\"formGridCheckbox\" >\r\n                            <label className=\"genderLabel\">Gender</label>\r\n                        \r\n                                <Form.Check inline type=\"radio\" label=\"Female\" name=\"gender\" value=\"F\" onChange={this.handleChange}/>\r\n                                <Form.Check inline type=\"radio\" label=\"Male\" name=\"gender\" value=\"M\" onChange={this.handleChange}/>\r\n                        </Form.Group>\r\n                        <span className=\"errorShow\">{errors.gender}</span>\r\n                        \r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</Button>\r\n                                <span className=\"errorShow\">{this.state.submitError}</span>\r\n                            </Col>\r\n                            <Col>\r\n                                <Link to=\"./signIn\">\r\n                                    <Button  type=\"submit\" className=\"btn btn-info btn-block\">Sign In</Button>\r\n                                </Link>    \r\n                             </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n                    </form>\r\n                </Row>\r\n                </Card>\r\n                {/* </Col> */}\r\n            </Row>\r\n            \r\n        </Container>\r\n        <Footer/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    userData: state.userData\r\n  });\r\n\r\n  const mapDispatchToProps = {\r\n    postUserInfo\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Registration);"]},"metadata":{},"sourceType":"module"}