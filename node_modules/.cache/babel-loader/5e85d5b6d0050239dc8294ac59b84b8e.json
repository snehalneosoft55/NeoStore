{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/NeoStore/src/components/AddToCart.js\";\nimport React from \"react\";\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport swal from \"sweetalert\";\nimport { getcartdata } from '../actions/cartDataAction';\nimport { connect } from \"react-redux\";\n\nclass AddToCart extends React.Component {\n  constructor() {\n    super();\n\n    this.handleCart = async e => {\n      console.log(\"handlecart in add to cart\");\n      const productData = this.props;\n      const productDetail = productData.ProductData;\n      const productDetails = [{\n        productDetail: productDetail,\n        quantity: 1\n      }];\n      this.props.getcartdata(productDetails); // const { openSnackbar, closeSnackbar } = this.props;\n      // const myArray = localStorage.getItem(\"cartProducts\");\n      // // console.log(\"myArray: \",JSON.parse(myArray));\n      // let productsInLocalStorage,\n      //   flag = false;\n      // if (myArray !== null) {\n      //   productsInLocalStorage = JSON.parse(myArray);\n      //   console.log(\"productsInLocalStorage\", productsInLocalStorage);\n      //   productsInLocalStorage.map((val, i) => {\n      //     let x = val;\n      //     // console.log(\"x==\",x.productDetail.id)\n      //     if (i === 0) {\n      //       console.log(\"x\");\n      //       console.log(\"x==\", x[0].productDetail.id);\n      //       let z = x[0].productDetail.id;\n      //       console.log(\"productDetails\", productDetails);\n      //       if (z === productDetails[i].productDetail.id) flag = true;\n      //     } else {\n      //       console.log(\"x in else==\", x[0].productDetail.id);\n      //       let a = x[0].productDetail.id;\n      //       console.log(\n      //         \"in else productDetails\",\n      //         productDetails[0].productDetail.id\n      //       );\n      //       if (a === productDetails[0].productDetail.id) {\n      //         flag = true;\n      //       }\n      //     }\n      //     // if(x === productDetails.productDetail.id){\n      //     //         flag = true;\n      //     // }\n      //   });\n      //   if (flag === false) {\n      //     productsInLocalStorage.push(productDetails);\n      //     swal(\"Added to cart\");\n      //     console.log(\"productsInLocalStorage\", productsInLocalStorage.length);\n      //     // openSnackbar('Added to cart')\n      //     // console.log(\"Modified myArray productsInLocalStorage: \",productsInLocalStorage);\n      //   } else {\n      //     alert(\"Already in cart\");\n      //   }\n      //   await localStorage.setItem(\n      //     \"cartProducts\",\n      //     JSON.stringify(productsInLocalStorage)\n      //   );\n      // } else {\n      //   console.log(\"productDetails\", productDetails);\n      //   await localStorage.setItem(\n      //     \"cartProducts\",\n      //     JSON.stringify(productDetails)\n      //   );\n      // }\n    };\n\n    this.state = {\n      cartProduct: 0\n    };\n  }\n\n  componentDidMount() {\n    const productData = this.props;\n    const productDetail = productData.ProductData;\n  }\n\n  render() {\n    const {\n      openSnackbar,\n      closeSnackbar\n    } = this.props;\n    const {\n      cartData\n    } = this.props;\n    return React.createElement(\"button\", {\n      className: \"ProductCardwrapperButton\",\n      style: {\n        marginLeft: this.props.m,\n        backgroundColor: this.props.color,\n        width: this.props.width,\n        height: this.props.height\n      },\n      onClick: this.handleCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Add To Cart\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartData: state.cartDtaReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  getcartdata\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToCart);","map":{"version":3,"sources":["/home/neosoft/NeoStore/src/components/AddToCart.js"],"names":["React","withSnackbar","swal","getcartdata","connect","AddToCart","Component","constructor","handleCart","e","console","log","productData","props","productDetail","ProductData","productDetails","quantity","state","cartProduct","componentDidMount","render","openSnackbar","closeSnackbar","cartData","marginLeft","m","backgroundColor","color","width","height","mapStateToProps","cartDtaReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAAQC,WAAR,QAA2B,2BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,UAVc,GAUD,MAAOC,CAAP,IAAa;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACF,YAAMC,WAAW,GAAG,KAAKC,KAAzB;AACA,YAAMC,aAAa,GAAGF,WAAW,CAACG,WAAlC;AACA,YAAMC,cAAc,GAAG,CACrB;AACEF,QAAAA,aAAa,EAAEA,aADjB;AAEEG,QAAAA,QAAQ,EAAE;AAFZ,OADqB,CAAvB;AAMA,WAAKJ,KAAL,CAAWV,WAAX,CAAuBa,cAAvB,EAVwB,CAWxB;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAjFa;;AAEZ,SAAKE,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMR,WAAW,GAAG,KAAKC,KAAzB;AACA,UAAMC,aAAa,GAAGF,WAAW,CAACG,WAAlC;AACD;;AAyEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAkC,KAAKV,KAA7C;AACA,UAAM;AAACW,MAAAA;AAAD,QAAa,KAAKX,KAAxB;AAEA,WACE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,KAAK,EAAE;AACLY,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWa,CADlB;AAELC,QAAAA,eAAe,EAAE,KAAKd,KAAL,CAAWe,KAFvB;AAGLC,QAAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWgB,KAHb;AAILC,QAAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWiB;AAJd,OAFT;AAQE,MAAA,OAAO,EAAE,KAAKtB,UARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAcD;;AArGqC;;AAuGxC,MAAMuB,eAAe,GAAIb,KAAD,IAAW;AAC/B,SAAO;AACLM,IAAAA,QAAQ,EAAEN,KAAK,CAACc;AADX,GAAP;AAGD,CAJH;;AAME,MAAMC,kBAAkB,GAAG;AACzB9B,EAAAA;AADyB,CAA3B;AAIA,eAAeC,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C5B,SAA7C,CAAf","sourcesContent":["import React from \"react\";\n\nimport { withSnackbar } from \"react-simple-snackbar\";\nimport swal from \"sweetalert\";\nimport {getcartdata} from  '../actions/cartDataAction'\nimport { connect } from \"react-redux\";\n\n\nclass AddToCart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cartProduct: 0,\n    };\n  }\n  componentDidMount() {\n    const productData = this.props;\n    const productDetail = productData.ProductData;\n  }\n  handleCart = async (e) => {\n      console.log(\"handlecart in add to cart\");\n    const productData = this.props;\n    const productDetail = productData.ProductData;\n    const productDetails = [\n      {\n        productDetail: productDetail,\n        quantity: 1,\n      },\n    ];\n    this.props.getcartdata(productDetails);\n    // const { openSnackbar, closeSnackbar } = this.props;\n\n\n\n    // const myArray = localStorage.getItem(\"cartProducts\");\n    // // console.log(\"myArray: \",JSON.parse(myArray));\n    // let productsInLocalStorage,\n    //   flag = false;\n\n    // if (myArray !== null) {\n    //   productsInLocalStorage = JSON.parse(myArray);\n    //   console.log(\"productsInLocalStorage\", productsInLocalStorage);\n\n    //   productsInLocalStorage.map((val, i) => {\n    //     let x = val;\n    //     // console.log(\"x==\",x.productDetail.id)\n\n    //     if (i === 0) {\n    //       console.log(\"x\");\n    //       console.log(\"x==\", x[0].productDetail.id);\n    //       let z = x[0].productDetail.id;\n    //       console.log(\"productDetails\", productDetails);\n    //       if (z === productDetails[i].productDetail.id) flag = true;\n    //     } else {\n    //       console.log(\"x in else==\", x[0].productDetail.id);\n    //       let a = x[0].productDetail.id;\n    //       console.log(\n    //         \"in else productDetails\",\n    //         productDetails[0].productDetail.id\n    //       );\n    //       if (a === productDetails[0].productDetail.id) {\n    //         flag = true;\n    //       }\n    //     }\n    //     // if(x === productDetails.productDetail.id){\n    //     //         flag = true;\n\n    //     // }\n    //   });\n\n    //   if (flag === false) {\n    //     productsInLocalStorage.push(productDetails);\n    //     swal(\"Added to cart\");\n    //     console.log(\"productsInLocalStorage\", productsInLocalStorage.length);\n    //     // openSnackbar('Added to cart')\n    //     // console.log(\"Modified myArray productsInLocalStorage: \",productsInLocalStorage);\n    //   } else {\n    //     alert(\"Already in cart\");\n    //   }\n    //   await localStorage.setItem(\n    //     \"cartProducts\",\n    //     JSON.stringify(productsInLocalStorage)\n    //   );\n    // } else {\n    //   console.log(\"productDetails\", productDetails);\n    //   await localStorage.setItem(\n    //     \"cartProducts\",\n    //     JSON.stringify(productDetails)\n    //   );\n    // }\n  };\n  render() {\n    const { openSnackbar, closeSnackbar } = this.props;\n    const {cartData} = this.props\n\n    return (\n      <button\n        className=\"ProductCardwrapperButton\"\n        style={{\n          marginLeft: this.props.m,\n          backgroundColor: this.props.color,\n          width: this.props.width,\n          height: this.props.height,\n        }}\n        onClick={this.handleCart}\n      >\n        Add To Cart\n      </button>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n      cartData: state.cartDtaReducer,\n    };\n  };\n  \n  const mapDispatchToProps = {\n    getcartdata\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(AddToCart);"]},"metadata":{},"sourceType":"module"}