{"ast":null,"code":"import * as actionTypes from \"../lib/constants/actionTypes\";\nimport { BASE_URL } from '../constants/BaseURL';\nimport axios from 'axios';\n\nconst getProductByCatIdSuccess = data => ({\n  type: actionTypes.GET_PRODUCT_BY_CAT_ID,\n  payload: data\n});\n\nexport function getProductByCatId(val) {\n  return function (dispatch) {\n    return axios.get(BASE_URL + \"commonProducts\", {\n      params: {\n        category_id: val\n      }\n    }).then(({\n      data\n    }) => {\n      ////console.log(\"data colors\",data);\n      console.log(\"data colors\", data);\n      const products = data.product_details;\n      console.log(\"products\", products);\n      dispatch(getProductByCatIdSuccess(data));\n    });\n  };\n} //   return function(dispatch) {\n//     return axios.get(BASE_URL + \"commonProducts\", {params: { color_id: val }})\n//         .then(({ data }) =>\n//         {\n//             console.log(\"data colors\",data);\n//             const products = data.product_details;\n//             console.log(\"products\",products);\n//             dispatch(getProductByColorIdSuccess(products));\n//         });\n// };","map":{"version":3,"sources":["/media/neosoft/9c465f2e-040e-4caf-a772-bfa0ff7f0d52/Backupsnehalp/NeoStore/src/actions/getProductByCatIdAction.js"],"names":["actionTypes","BASE_URL","axios","getProductByCatIdSuccess","data","type","GET_PRODUCT_BY_CAT_ID","payload","getProductByCatId","val","dispatch","get","params","category_id","then","console","log","products","product_details"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,8BAA7B;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,wBAAwB,GAAGC,IAAI,KAEjC;AACAC,EAAAA,IAAI,EAAEL,WAAW,CAACM,qBADlB;AAEAC,EAAAA,OAAO,EAAEH;AAFT,CAFiC,CAArC;;AAOE,OAAO,SAASI,iBAAT,CAA2BC,GAA3B,EACP;AACE,SAAO,UAASC,QAAT,EAAmB;AACxB,WAAOR,KAAK,CAACS,GAAN,CAAUV,QAAQ,GAAG,gBAArB,EAAuC;AAACW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,WAAW,EAAEJ;AAAf;AAAT,KAAvC,EAEAK,IAFA,CAEK,CAAC;AAAEV,MAAAA;AAAF,KAAD,KACN;AACI;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BZ,IAA1B;AACJ,YAAMa,QAAQ,GAAGb,IAAI,CAACc,eAAtB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,QAAvB;AACIP,MAAAA,QAAQ,CAACP,wBAAwB,CAACC,IAAD,CAAzB,CAAR;AACH,KATA,CAAP;AAUD,GAXD;AAYD,C,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as actionTypes from \"../lib/constants/actionTypes\";\nimport {BASE_URL} from '../constants/BaseURL'\n\nimport axios from 'axios';\n\nconst getProductByCatIdSuccess = data => (\n  \n    {\n    type: actionTypes.GET_PRODUCT_BY_CAT_ID,\n    payload: data\n  });\n\n  export function getProductByCatId(val) \n  {\n    return function(dispatch) {\n      return axios.get(BASE_URL + \"commonProducts\", {params: { category_id: val }})\n        \n            .then(({ data }) =>\n            {\n                ////console.log(\"data colors\",data);\n                console.log(\"data colors\",data);\n            const products = data.product_details;\n            console.log(\"products\",products);\n                dispatch(getProductByCatIdSuccess(data));\n            });\n    };\n  }\n//   return function(dispatch) {\n//     return axios.get(BASE_URL + \"commonProducts\", {params: { color_id: val }})\n//         .then(({ data }) =>\n//         {\n//             console.log(\"data colors\",data);\n//             const products = data.product_details;\n//             console.log(\"products\",products);\n//             dispatch(getProductByColorIdSuccess(products));\n//         });\n// };"]},"metadata":{},"sourceType":"module"}