{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/NeoStore/src/components/cartIncart.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Card } from '@material-ui/core';\nimport TableInCart from './TableIncart';\nimport { BASE_URL } from '../constants/BaseURL';\nexport default class CartInCart extends React.Component {\n  constructor() {\n    super();\n\n    this.incrementBtnHandler = data => {\n      // let incVal= this.state.quantity;\n      // incVal=incVal+1;\n      console.log(\"data in incHandler\", data);\n      data = data + 1;\n      const temData = JSON.parse(localStorage.getItem('cartProducts'));\n      const tempDataProductdetail = temData.quantity;\n      console.log(\"in loc st q==\", tempDataProductdetail); // this.setState({quantity:incVal});\n      // const temData= JSON.parse(localStorage.getItem('cartProducts'));\n      // const tempDataProductdetail = tempdata\n    };\n\n    this.decrementHandler = () => {\n      let decVal = this.state.quantity;\n      decVal = decVal - 1;\n      this.setState({\n        quantity: decVal\n      });\n    };\n\n    this.state = {\n      quantity: ''\n    };\n  }\n\n  componentDidMount() {\n    const x = JSON.parse(localStorage.getItem('cartProducts'));\n    this.setState({\n      quantity: 1\n    });\n  }\n\n  render() {\n    const x = JSON.parse(localStorage.getItem('cartProducts'));\n    console.log(\"in cart.js,,,data==\", x);\n    console.log(\"length\", x.length);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Product\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Qantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, x !== undefined && x.map((val, i) => {\n      if (i === 0) {\n        let data = val.productDetail;\n        console.log(\"data of first row==\", data);\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: {\n            height: \"60px\",\n            width: \"60px\"\n          },\n          src: BASE_URL + data.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, data.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, data.productProducer), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"status:\", data.productStock > 0 ? 'in stock' : 'out of stock')))))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"q\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, data.price), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"t\"));\n      } else {\n        let data1 = val[0].productDetail; // console.log(`in ${i} row n data is==`,data1);\n\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: {\n            height: \"60px\",\n            width: \"60px\"\n          },\n          src: BASE_URL + data1.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, data1.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, data1.productProducer), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"status:\", data1.productStock > 0 ? 'in stock' : 'out of stock')))))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          style: {\n            width: \"20px\",\n            height: \"20px\",\n            borderRadius: \"50%\",\n            border: \"none\",\n            background: \"red\"\n          },\n          onClick: this.decrementHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"-\"), React.createElement(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"20px\"\n          },\n          value: val[0].quantity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          style: {\n            width: \"20px\",\n            height: \"20px\",\n            borderRadius: \"50%\",\n            border: \"none\",\n            background: \"red\"\n          },\n          onClick: () => this.incrementBtnHandler(val[0].quantity),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"+\"))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, data1.price), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"t\"));\n      }\n    })))))), React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/neosoft/NeoStore/src/components/cartIncart.js"],"names":["React","Container","Row","Col","Card","TableInCart","BASE_URL","CartInCart","Component","constructor","incrementBtnHandler","data","console","log","temData","JSON","parse","localStorage","getItem","tempDataProductdetail","quantity","decrementHandler","decVal","state","setState","componentDidMount","x","render","length","undefined","map","val","i","productDetail","height","width","image","title","productProducer","productStock","price","data1","borderRadius","border","background"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Container ,Row, Col } from 'react-bootstrap'\nimport { Card } from '@material-ui/core';\nimport TableInCart from './TableIncart';\nimport {BASE_URL} from '../constants/BaseURL'\n\nexport default class CartInCart extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            quantity:''\n        }\n    }\n    componentDidMount(){\n        const x= JSON.parse(localStorage.getItem('cartProducts'));\n        this.setState({quantity:1});\n        \n    }\n    incrementBtnHandler = (data)=>{\n        // let incVal= this.state.quantity;\n        // incVal=incVal+1;\n        console.log(\"data in incHandler\",data);\n        data=data+1;\n        const temData= JSON.parse(localStorage.getItem('cartProducts'));\n        const tempDataProductdetail = temData.quantity;\n        console.log(\"in loc st q==\",tempDataProductdetail);\n        // this.setState({quantity:incVal});\n        // const temData= JSON.parse(localStorage.getItem('cartProducts'));\n        // const tempDataProductdetail = tempdata\n    }\n    decrementHandler = () =>{\n        let decVal= this.state.quantity;\n        decVal=decVal-1;\n        this.setState({quantity:decVal})\n    }\n    render(){\n        const x= JSON.parse(localStorage.getItem('cartProducts'));\n        console.log(\"in cart.js,,,data==\",x);\n        console.log(\"length\",x.length);\n\n        return(\n            <React.Fragment>\n                <Container fluid={true}>\n                    <Row>\n                        <Col>\n                            <Card>\n                            <div class=\"container\">\n  \n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>Product</th>\n        <th>Qantity</th>\n        <th>Price</th>\n        <th>Total</th>\n      </tr>\n    </thead>\n    \n    <tbody>\n        {\n            (x !== undefined )&&(\n                x.map(\n                    (val,i)=>{\n                        if(i=== 0){\n                            let data=val.productDetail\n                            console.log(\"data of first row==\",data);\n                            return(\n                                <tr>\n                                <td>\n                                    <React.Fragment>\n                                        <Container>\n                                            <Row>\n                                                <Col xs={3}>\n                                                    <img style={{height:\"60px\",width:\"60px\"}} src={BASE_URL + data.image}></img>\n                                                </Col>\n                                                <Col>\n                            <p>{data.title}</p>\n                            <p>{data.productProducer}</p>\n                            <p>status:{(data.productStock >0)?('in stock'):('out of stock')}</p>\n                                                </Col>\n                                            </Row>\n                                        </Container>\n                                    </React.Fragment>\n                                </td>\n                                <td>q</td>\n                            <td>{data.price}</td>\n                                <td>t</td>\n                              </tr>\n                            )\n                        }\n                        else{\n                            let data1 = val[0].productDetail;\n                            // console.log(`in ${i} row n data is==`,data1);\n                            return(\n                                <tr>\n                                <td>\n                                <React.Fragment>\n                                        <Container>\n                                            <Row>\n                                                <Col xs={3}>\n                                                    <img style={{height:\"60px\",width:\"60px\"}} src={BASE_URL + data1.image}></img>\n                                                </Col>\n                                                <Col>\n                            <p>{data1.title}</p>\n                            <p>{data1.productProducer}</p>\n                            <p>status:{(data1.productStock >0)?('in stock'):('out of stock')}</p>\n                                                </Col>\n                                            </Row>\n                                        </Container>\n                                    </React.Fragment>\n                                </td>\n                                <td>\n                                    <div>\n                                        <button style={{\n                                            width:\"20px\",\n                                            height:\"20px\",\n                                            borderRadius:\"50%\",\n                                            border:\"none\",\n                                            background:\"red\"\n                                        }} onClick={this.decrementHandler}>-</button>\n                                        <input type=\"text\" style={{width:\"20px\"}} value={val[0].quantity}>\n                                        </input>\n                                        <button style={{\n                                            width:\"20px\",\n                                            height:\"20px\",\n                                            borderRadius:\"50%\",\n                                            border:\"none\",\n                                            background:\"red\",\n                                            \n                                        }} onClick={()=>this.incrementBtnHandler(val[0].quantity)}>+</button>\n                                    </div>\n                                </td>\n                            <td>{data1.price}</td>\n                                <td>t</td>\n                              </tr>\n                            )\n                        }\n                        \n                    }\n                )\n            )\n        }\n      \n    </tbody>\n  </table>\n</div>\n                            </Card>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n\n                </Container>\n            </React.Fragment>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}